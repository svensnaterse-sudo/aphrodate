# -*- coding: utf-8 -*-
"""theproject.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xkih-6d3OP41AtCLZYkxOszICC5wZWtW
"""

import pandas as pd
dataset_path = "speeddating (1).csv"

datasetfirst = pd.read_csv(dataset_path)


df = pd.DataFrame(datasetfirst)
dataset = datasetfirst

dataset = df.drop([
    'd_d_age', 'd_importance_same_race', 'd_importance_same_religion',
    'd_pref_o_attractive', 'd_pref_o_sincere', 'd_pref_o_intelligence',
    'd_pref_o_funny', 'd_pref_o_ambitious', 'd_pref_o_shared_interests',
    'd_attractive_o', 'd_sinsere_o', 'd_intelligence_o', 'd_funny_o',
    'd_ambitous_o', 'd_shared_interests_o', 'd_attractive_important',
    'd_sincere_important', 'd_intellicence_important', 'd_funny_important',
    'd_ambtition_important', 'd_shared_interests_important', 'd_attractive',
    'd_sincere', 'd_intelligence', 'd_funny', 'd_ambition', 'd_attractive_partner',
    'd_sincere_partner', 'd_intelligence_partner', 'd_funny_partner',
    'd_ambition_partner', 'd_shared_interests_partner', 'd_sports', 'd_tvsports',
    'd_exercise', 'd_dining', 'd_museums', 'd_art', 'd_hiking', 'd_gaming',
    'd_clubbing', 'd_reading', 'd_tv', 'd_theater', 'd_movies', 'd_concerts',
    'd_music', 'd_shopping', 'd_yoga', 'd_interests_correlate',
    'd_expected_happy_with_sd_people', 'd_expected_num_interested_in_me',
    'd_expected_num_matches', 'd_like', 'd_guess_prob_liked',
    'sinsere_o',
    'age_o',
    'pref_o_attractive', 'pref_o_sincere', 'pref_o_intelligence', 'pref_o_funny',
    'pref_o_ambitious', 'pref_o_shared_interests',
    'attractive_partner', 'sincere_partner', 'intelligence_partner',
    'funny_partner', 'ambition_partner',
    'expected_num_interested_in_me',
    'has_null', 'field',
    'importance_same_religion',
    'expected_happy_with_sd_people', 'expected_num_matches', 'guess_prob_liked',
    'sincere_important', 'funny_important', 'shared_interests_important',
    'like', 'met', 'wave', 'decision', 'decision_o', 'sincere', 'shared_interests_o',  'attractive_o', 'intelligence_o', 'funny_o', 'ambitous_o'
], axis=1)

# Select numeric columns (int or float)
numeric_columns = dataset.select_dtypes(include=['int64', 'float64']).columns.tolist()

# Select non-numeric columns
non_numeric_columns = dataset.select_dtypes(exclude=['int64', 'float64']).columns.tolist()


import numpy as np
df = pd.DataFrame(dataset)

df = df.dropna()

dataset_encoded = pd.get_dummies(df, drop_first=True)




dataset_encoded = dataset_encoded.astype(int)

dataset_encoded.dtypes

df = pd.DataFrame(dataset_encoded)
X = df.drop("match",  axis="columns")
y = df["match"]


import sklearn.model_selection as sk
sk.train_test_split(df)
X_train, X_test, y_train, y_test = sk.train_test_split(
X,y , random_state=42,test_size=0.20, shuffle=True)

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler().fit(X_train)
X_train_scaled = scaler.transform(X_train)
X_test_scaled = scaler.transform(X_test)


from sklearn.neighbors import KNeighborsRegressor

knn_reg = KNeighborsRegressor(n_neighbors=3)
knn_reg.fit(X_train_scaled, y_train)

from sklearn.metrics import mean_absolute_error

y_pred = knn_reg.predict(X_test_scaled)
mean_absolute_error(y_test, y_pred)

from joblib import dump, load

# Save the trained model and the scaler
dump(knn_reg, "knn_model.joblib")
dump(scaler, "scaler.joblib")

print("Model and scaler saved successfully!")
